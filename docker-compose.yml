services:
  # Application Container (PHP-FPM)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fgp-laravel-app
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      # Use named volumes for better Windows performance
      - laravel_storage:/var/www/html/storage
      - laravel_bootstrap_cache:/var/www/html/bootstrap/cache
      - laravel_public_build:/var/www/html/public/build
    networks:
      - fgp-laravel-network
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - VITE_APP_URL=${APP_URL:-http://localhost}

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: fgp-laravel-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - fgp-laravel-network
    depends_on:
      - app
    restart: unless-stopped

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: fgp-laravel-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root_password}
      MYSQL_DATABASE: ${DB_DATABASE:-real_estate_platform}
      MYSQL_USER: ${DB_USERNAME:-real_estate_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - fgp-laravel-network
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: fgp-laravel-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf
    networks:
      - fgp-laravel-network
    command: redis-server /etc/redis/redis.conf
    restart: unless-stopped

  # Elasticsearch (for search) - Optional for development
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: fgp-laravel-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"  # Reduced memory for development
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - fgp-laravel-network
    restart: unless-stopped
    profiles:
      - elasticsearch  # Make it optional

  # Queue Worker - Optional for development
  queue-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fgp-laravel-queue
    working_dir: /var/www/html
    command: php artisan queue:work --verbose --tries=3 --timeout=300
    volumes:
      - .:/var/www/html
    networks:
      - fgp-laravel-network
    depends_on:
      - mysql
      - redis
      - app
    restart: unless-stopped
    env_file:
      - .env
    profiles:
      - queue

  # Laravel Horizon (Queue Dashboard) - Optional for development
  horizon:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fgp-laravel-horizon
    working_dir: /var/www/html
    command: php artisan horizon
    volumes:
      - .:/var/www/html
    networks:
      - fgp-laravel-network
    depends_on:
      - mysql
      - redis
      - app
    restart: unless-stopped
    env_file:
      - .env
    profiles:
      - queue

  # Node.js Development Server (for hot reloading with Vite)
  node:
    image: node:18-alpine
    container_name: fgp-laravel-node
    working_dir: /var/www/html
    ports:
      - "5173:5173"
      - "5174:5174"  # Alternative port
    volumes:
      - .:/var/www/html
      - node_modules:/var/www/html/node_modules  # Named volume for better Windows performance
    networks:
      - fgp-laravel-network
    command: sh -c "npm install && npm run dev"
    profiles:
      - development

  # MailHog (Email testing in development)
  mailhog:
    image: mailhog/mailhog
    container_name: fgp-laravel-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - fgp-laravel-network
    profiles:
      - development

networks:
  fgp-laravel-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  elasticsearch_data:
  laravel_storage:
  laravel_bootstrap_cache:
  laravel_public_build:
  node_modules:  # For better Windows performance with Node.js